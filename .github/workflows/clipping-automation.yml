name: Clipping FACIAP Automation

on:
  schedule:
    # Segunda a Sexta √†s 12h (15h UTC) e 20h (23h UTC) - Hor√°rio de Bras√≠lia
    - cron: '0 15,23 * * 1-5'  # 12h e 20h no hor√°rio de Bras√≠lia, apenas dias √∫teis
  workflow_dispatch:  # Permite execu√ß√£o manual
    inputs:
      max_pages:
        description: 'M√°ximo de p√°ginas por fonte'
        required: false
        default: '3'
      max_extraction:
        description: 'M√°ximo de extra√ß√µes por execu√ß√£o'
        required: false
        default: '50'

jobs:
  clipping-automation:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create directories
      run: |
        mkdir -p data logs
        
    - name: Restore database
      uses: actions/cache@v3
      with:
        path: data/clipping_faciap.db
        key: clipping-db-${{ github.run_id }}
        restore-keys: |
          clipping-db-
          
    - name: Execute clipping pipeline
      env:
        MAX_PAGES_PER_SOURCE: ${{ github.event.inputs.max_pages || '3' }}
        MAX_EXTRACTION_PER_RUN: ${{ github.event.inputs.max_extraction || '50' }}
        LOG_LEVEL: INFO
        TZ: America/Sao_Paulo  # Define timezone do Brasil
      run: |
        cd scr
        python -c "
        from pipeline import ClippingPipeline
        import os
        from datetime import datetime
        
        # Verifica se √© dia √∫til (segunda a sexta)
        hoje = datetime.now().weekday()  # 0=Monday, 6=Sunday
        if hoje >= 5:  # S√°bado ou Domingo
            print('‚è≠Ô∏è Pulando execu√ß√£o - Final de semana')
            exit(0)
        
        print(f'üìÖ Executando clipping - {datetime.now().strftime(\"%A %d/%m/%Y %H:%M\")}')
        
        pipeline = ClippingPipeline()
        resultado = pipeline.executar_completo(
            max_pages_por_fonte=int(os.getenv('MAX_PAGES_PER_SOURCE', 3)),
            limite_extracao=int(os.getenv('MAX_EXTRACTION_PER_RUN', 50)),
            limite_scoring=100
        )
        
        print(f'‚úÖ Pipeline conclu√≠do: {resultado[\"sucesso\"]}')
        print(f'‚è±Ô∏è Tempo: {resultado[\"tempo_execucao\"]:.1f}s')
        print(f'üì∞ Not√≠cias novas: {resultado[\"coleta\"][\"total_novas\"]}')
        "
        
    - name: Save database
      uses: actions/cache@v3
      with:
        path: data/clipping_faciap.db
        key: clipping-db-${{ github.run_id }}
        
    - name: Upload logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: automation-logs
        path: logs/
        retention-days: 7
